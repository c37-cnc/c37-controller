# http://www.appveyor.com/docs/appveyor-yml

version: "{build}-{branch}"

cache:
  - '%USERPROFILE%\.electron'

init:
  - git --version
  - git config --global core.autocrlf false
  - git config --global user.name "AppVeyor"
  - git config --global user.email "appveyor@ci.appveyor.com"

environment:
  matrix:
  - nodejs_version: "6"
  # https://github.com/electron-userland/electron-builder/wiki/Code-Signing
  #global:

matrix:
  fast_finish: true

# teste para commit

platform:
  - x64

install:
  - ps: |
      Write-Host "Build directory: " -NoNewLine
      Write-Host $env:APPVEYOR_BUILD_FOLDER -ForegroundColor "Green"
      Write-Host "Build number: " -NoNewLine
      Write-Host $env:APPVEYOR_BUILD_NUMBER -ForegroundColor "Green"
      Write-Host "Branch: " -NoNewLine
      Write-Host $env:APPVEYOR_REPO_BRANCH -ForegroundColor "Green"
      Write-Host "Tag: " -NoNewLine
      Write-Host $env:APPVEYOR_REPO_TAG_NAME -ForegroundColor "Green"
      Write-Host "Commit: " -NoNewLine
      Write-Host $env:APPVEYOR_REPO_COMMIT -ForegroundColor "Green"
      Write-Host "Commit timestamp: " -NoNewLine
      Write-Host $env:APPVEYOR_REPO_COMMIT_TIMESTAMP -ForegroundColor "Green"
  - ps: Install-Product node $env:nodejs_version $env:platform
  - npm install -g npm
  - npm --version
  - npm install

build_script:
  # - ps: |
  #     if ($env:APPVEYOR_REPO_TAG -eq 'false' -or $env:APPVEYOR_REPO_TAG -eq 'False') {
  #       npm run build-latest
  #     }
  #     else {
  #       npm run build
  #     }
  - ps: mkdir releases
  #- ps: mkdir output
  - ps: $PACKAGE_NAME = bash -c 'script/package-name.sh package.json'
  - ps: $PACKAGE_VERSION = bash -c 'script/package-version.sh package.json'
  - ps: $env:RELEASE = "${PACKAGE_NAME}-${PACKAGE_VERSION}"
  - ps: $env:COMMIT_LOG = git log -1 --format='%ci %H %s'
  - ps: echo "$env:RELEASE"
  - ps: echo "$env:COMMIT_LOG"
  - ps: |
      if ($env:nodejs_version -eq '6' -And $env:platform -eq 'x64') {
        npm run build:win-x64
        Copy-Item "output\${PACKAGE_NAME} Setup ${PACKAGE_VERSION}.exe" "releases\${env:RELEASE}-win-x64.exe"
        Get-ChildItem releases
        if ($env:APPVEYOR_REPO_TAG -eq 'false' -or $env:APPVEYOR_REPO_TAG -eq 'False') {
          npm run github-release delete --owner ciro.maciel --repo c37-cnc/c37-controller --tag "${env:APPVEYOR_REPO_BRANCH}-latest" --name "${env:APPVEYOR_REPO_BRANCH}" "*-win-x64.exe"
          npm run github-release upload --owner ciro.maciel --repo c37-cnc/c37-controller --tag "${env:APPVEYOR_REPO_BRANCH}-latest" --name "${env:APPVEYOR_REPO_BRANCH}" --body "${env:COMMIT_LOG}" "releases\${env:RELEASE}-win-x64.exe"
        }
      }
  - ps: |
      if ($env:nodejs_version -eq '6' -And $env:platform -eq 'x64') {
        npm run build:win-ia32
        Get-ChildItem output
        Copy-Item "output\${PACKAGE_NAME} Setup ${PACKAGE_VERSION}.exe" "releases\${env:RELEASE}-win-ia32.exe"
        Get-ChildItem releases
        if ($env:APPVEYOR_REPO_TAG -eq 'false' -or $env:APPVEYOR_REPO_TAG -eq 'False') {
          npm run github-release delete --owner ciro.maciel --repo c37-cnc/c37-controller --tag "${env:APPVEYOR_REPO_BRANCH}-latest" --name "${env:APPVEYOR_REPO_BRANCH}" "*-win-ia32.exe"
          npm run github-release upload --owner ciro.maciel --repo c37-cnc/c37-controller --tag "${env:APPVEYOR_REPO_BRANCH}-latest" --name "${env:APPVEYOR_REPO_BRANCH}" --body "${env:COMMIT_LOG}" "releases\${env:RELEASE}-win-ia32.exe"
        }
      }

test: off

# Packaging artifacts
# https://www.appveyor.com/docs/packaging-artifacts
artifacts:
  # pushing all *.exe files in a directory
  - path: releases\*.exe

# Publishing artifacts to GitHub Releases
# https://www.appveyor.com/docs/deployment/github
deploy:
  - provider: GitHub
    auth_token:
      secure: d938d66eeb8e75d9fd609e50a0b5ea717a021389
    draft: false
    prerelease: false
    on:
      branch: master
      appveyor_repo_tag: true  # deploy on tag push only
      nodejs_version: "6"